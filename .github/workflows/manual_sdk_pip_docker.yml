name: Manual Upload PyPI, Docker Build & Push

on:
  workflow_dispatch:
    branches: [ '*' ]
    inputs:
      package_version:
        description: 'Package version without leading v, e.g. 1.20.300'
        required: true
        type: string

env:
  REGISTRY: docker.io
  ORG: supervisely
  RELEASE_VERSION: ${{ inputs.package_version }}

  _docker_build_push: &docker_build_push
    if: ${{ false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Check tag
        id: tag_check
        run: |
          if docker manifest inspect "${REGISTRY}/${ORG}/${IMAGE_NAME}:${RELEASE_VERSION}" >/dev/null 2>&1; then
            echo "exists=true" >>"$GITHUB_OUTPUT"
          else
            echo "exists=false" >>"$GITHUB_OUTPUT"
          fi

      - name: Build & push ${{ env.IMAGE_NAME }}
        if: steps.tag_check.outputs.exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
            ${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            tag_ref_name=${{ env.RELEASE_VERSION }}

      - name: Skip Docker push notice
        if: steps.tag_check.outputs.exists == 'true'
        run: echo "Image $IMAGE_NAME:$RELEASE_VERSION already exists â€” skipping."

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/supervisely
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Write tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> "${GITHUB_ENV}"

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Wait for tag replication
        uses: jakejarvis/wait-action@master
        with:
          time: "150s"

      - name: Build sdist / wheel
        run: python -m build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

      - name: Wait after PyPI publish
        uses: jakejarvis/wait-action@master
        with:
          time: "300s"

  base-py-sdk:
    needs: deploy
    <<: *docker_build_push
    env:
      IMAGE_NAME: base-py-sdk
      DOCKERFILE_PATH: base_images/py_sdk/Dockerfile

  collaboration:
    needs: base-py-sdk
    <<: *docker_build_push
    env:
      IMAGE_NAME: collaboration
      DOCKERFILE_PATH: docker_images/collaboration/Dockerfile

  data-operations:
    needs: base-py-sdk
    <<: *docker_build_push
    env:
      IMAGE_NAME: data-operations
      DOCKERFILE_PATH: docker_images/data_operations/Dockerfile

  development:
    needs: base-py-sdk
    <<: *docker_build_push
    env:
      IMAGE_NAME: development
      DOCKERFILE_PATH: docker_images/development/Dockerfile

  import-export:
    needs: base-py-sdk
    <<: *docker_build_push
    env:
      IMAGE_NAME: import-export
      DOCKERFILE_PATH: docker_images/import_export/Dockerfile

  labeling:
    needs: base-py-sdk
    <<: *docker_build_push
    env:
      IMAGE_NAME: labeling
      DOCKERFILE_PATH: docker_images/labeling/Dockerfile

  synthetic:
    needs: base-py-sdk
    <<: *docker_build_push
    env:
      IMAGE_NAME: synthetic
      DOCKERFILE_PATH: docker_images/synthetic/Dockerfile

  system:
    needs: base-py-sdk
    <<: *docker_build_push
    env:
      IMAGE_NAME: system
      DOCKERFILE_PATH: docker_images/system/Dockerfile

  visualization-stats:
    needs: base-py-sdk
    <<: *docker_build_push
    env:
      IMAGE_NAME: visualization-stats
      DOCKERFILE_PATH: docker_images/visualization_stats/Dockerfile
