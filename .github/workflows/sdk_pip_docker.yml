name: Upload PyPI and Docker

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/supervisely
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Delay for Github tag_name
        uses: jakejarvis/wait-action@master
        with:
          time: "150s"

      - name: Build package
        run: python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Delay for PyPI publish
        uses: jakejarvis/wait-action@master
        with:
          time: "240s"

      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: supervisely/base-py-sdk
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "base_images/py_sdk/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  collaboration:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: supervisely/collaboration
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker_images/collaboration/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  data-operations:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: supervisely/data-operations
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker_images/data_operations/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  development:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: supervisely/development
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker_images/development/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  import-export:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: supervisely/import-export
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker_images/import_export/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  labeling:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: supervisely/labeling
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker_images/labeling/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  synthetic:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: supervisely/synthetic
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker_images/synthetic/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  system:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: supervisely/system
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker_images/system/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  visualization-stats:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: supervisely/visualization-stats
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker_images/visualization_stats/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
