on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        repository: GoldenAnpu/supervisely_test
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    - name: Create .pylintrc file
      run: |
        echo "[MESSAGES CONTROL]" >> .pylintrc
        echo "enable = E" >> .pylintrc
        echo "disable = E0401,E1101,R,F,W,C" >> .pylintrc
    
    - name: Get list of changed files
      id: getfile
      run: |
        echo "::set-output name=files::$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep .py | xargs)"
      
    - name: Run pylint and save errors to file
      run: |
        if [ -n "${{ steps.getfile.outputs.files }}" ]; then
          pylint_output=$(pylint ${{ steps.getfile.outputs.files }}) || true
          if [[ $pylint_output == *"E"* ]]; then
            echo "$pylint_output" > pylint_errors.txt
            echo "::set-output name=pylint_errors::$pylint_output"
          fi
        fi
      id: pylint

    - name: Create GitHub issue
      run: |
        if [[ -n "${{ steps.pylint.outputs.pylint_errors }}" ]]; then
          issue_body=$(cat pylint_errors.txt)
          echo "Issue body: $issue_body"
          
          json=$(jq -n \
                    --arg title "Pylint Errors for ${{ github.event_name }} ${{ github.sha }}" \
                    --arg body "$issue_body" \
                    --argjson assignees '["${{ github.actor }}"]' \
                    --argjson labels '["bug"]' \
                    '{title: $title, body: $body, assignees: $assignees, labels: $labels}')

          issue_response=$(curl -X POST -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.NEW_SECRET }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/GoldenAnpu/issues/issues \
            -d "$json"
            )

          echo "GitHub response: $issue_response"
          issue_url=$(echo "$issue_response" | jq -r '.html_url')
          echo "issue_url=$issue_url" >> $GITHUB_ENV
        else
          echo "No pylint errors detected."
        fi
