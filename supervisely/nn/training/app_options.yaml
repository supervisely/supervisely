# ==================== Model Selection =============
model_selector:
  enabled: true
  show_custom: true

# ==================== Data Selection ==============
# if false, use all classes from project meta
classes_selector:
  enabled: true

# if false, use all tags from project meta
tags_selector:
  enabled: false

# if false, skip train/val splits step
train_val_splits_selector:
  enabled: true
  methods:
    - Random
    - Based on tags
    - Based on datasets
    - Based on collections

# ==================== Options ====================
# How to display training results in the GUI:
#   if true    – generate experiment page with training results
#   if false   – show only a link to the output folder instead of the report
generate_report: true

# Add selector for selecting cuda device
device_selector: false

# Add options to run model benchmark after training
model_benchmark: false

# Show logs in UI during training
show_logs_in_gui: true

# [Beta] Collapse GUI cards on selection
collapsable: false

# ==================== Export ======================
# Requires additional implementation
export_onnx_supported: false
# @train.export_onnx
# def to_onnx(experiment_info: dict):
#     Implement ONNX export

export_tensorrt_supported: false
# @train.export_tensorrt
# def to_tensorrt(experiment_info: dict):
#     Implement TensorRT export

# ==================== Logging =====================
# Enable this option when using supervisely train logger
# train_logger: "tensorboard"

# ==================== Integration =================
# How to run trained checkpoints outside Supervisely:
#   branch  – main (master) branch of the training repository.
#   path    – path to the directory with demo files in training repository.
#           - directory should contain:
#             - README.md
#             - demo_pytorch.py
#             - demo_onnx.py
#             - demo_tensorrt.py
# demo:
#   branch: "main"
#   path: "supervisely_integration/demo"
