# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: worker_api.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='worker_api.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x10worker_api.proto\"\x19\n\tModelName\x12\x0c\n\x04name\x18\x01 \x01(\t\"{\n\x11ModelArchitecture\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x14\n\x0ctrain_docker\x18\x02 \x01(\t\x12\x12\n\ninf_docker\x18\x03 \x01(\t\x12\x15\n\rdeploy_docker\x18\x04 \x01(\t\x12\x17\n\x0f\x64\x65ploysm_docker\x18\x05 \x01(\t\"N\n\tModelInfo\x12\x1f\n\x04\x64\x65sc\x18\x01 \x01(\x0b\x32\x11.ModelDescription\x12 \n\x04\x61rch\x18\x02 \x01(\x0b\x32\x12.ModelArchitecture\",\n\x10ModelDescription\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0c\n\x04hash\x18\x02 \x01(\t\"\x19\n\tAgentInfo\x12\x0c\n\x04info\x18\x01 \x01(\t\"\x1a\n\nServerInfo\x12\x0c\n\x04info\x18\x01 \x01(\t\"N\n\x11ImagesInfoRequest\x12\x12\n\nproject_id\x18\x01 \x01(\r\x12\x12\n\ndataset_id\x18\x02 \x01(\r\x12\x11\n\timage_ids\x18\x03 \x03(\r\"#\n\nImagesInfo\x12\x15\n\x05infos\x18\x01 \x03(\x0b\x32\x06.Image\"\"\n\x04\x46ile\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x0c\n\x04meta\x18\x02 \x01(\t\"!\n\tListFiles\x12\x14\n\x05\x66iles\x18\x01 \x03(\x0b\x32\x05.File\"6\n\rImportRequest\x12\x0f\n\x07task_id\x18\x01 \x01(\r\x12\x14\n\x05\x66iles\x18\x02 \x03(\x0b\x32\x05.File\"7\n\tChunkFile\x12\x15\n\x05\x63hunk\x18\x01 \x01(\x0b\x32\x06.Chunk\x12\x13\n\x04\x66ile\x18\x02 \x01(\x0b\x32\x05.File\"E\n\nChunkModel\x12\x15\n\x05\x63hunk\x18\x01 \x01(\x0b\x32\x06.Chunk\x12 \n\x05model\x18\x02 \x01(\x0b\x32\x11.ModelDescription\"\x07\n\x05\x45mpty\"%\n\x06Result\x12\x0c\n\x04\x63ode\x18\x01 \x01(\r\x12\r\n\x05\x65rror\x18\x02 \x01(\t\"\x10\n\x02Id\x12\n\n\x02id\x18\x01 \x01(\r\"s\n\x05Image\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0c\n\x04hash\x18\x02 \x01(\t\x12\r\n\x05title\x18\x03 \x01(\t\x12\x0b\n\x03\x65xt\x18\x04 \x01(\t\x12\x12\n\ndataset_id\x18\x05 \x01(\r\x12\x12\n\nproject_id\x18\x06 \x01(\r\x12\x0c\n\x04meta\x18\x07 \x01(\t\"\x1c\n\nImageArray\x12\x0e\n\x06images\x18\x01 \x03(\r\"M\n\x0bImagesToAdd\x12\x16\n\x06images\x18\x01 \x03(\x0b\x32\x06.Image\x12\x12\n\ndataset_id\x18\x02 \x01(\r\x12\x12\n\nproject_id\x18\x03 \x01(\r\"=\n\x0cImagesHashes\x12\x15\n\rimages_hashes\x18\x01 \x03(\t\x12\x16\n\x0esrc_node_token\x18\x02 \x01(\t\":\n\x05\x43hunk\x12\x0e\n\x06\x62uffer\x18\x01 \x01(\x0c\x12\x12\n\ntotal_size\x18\x02 \x01(\x04\x12\r\n\x05\x65rror\x18\x03 \x01(\t\":\n\nChunkImage\x12\x15\n\x05\x63hunk\x18\x01 \x01(\x0b\x32\x06.Chunk\x12\x15\n\x05image\x18\x02 \x01(\x0b\x32\x06.Image\"+\n\x0eNodeObjectHash\x12\x0c\n\x04hash\x18\x01 \x01(\t\x12\x0b\n\x03\x65xt\x18\x02 \x01(\t\"0\n\x0cGeneralEvent\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\"2\n\x07Project\x12\n\n\x02id\x18\x01 \x01(\r\x12\r\n\x05title\x18\x02 \x01(\t\x12\x0c\n\x04meta\x18\x03 \x01(\t\"$\n\x07\x44\x61taset\x12\n\n\x02id\x18\x01 \x01(\r\x12\r\n\x05title\x18\x02 \x01(\t\"*\n\x0cProjectArray\x12\x1a\n\x08projects\x18\x01 \x03(\x0b\x32\x08.Project\"*\n\x0c\x44\x61tasetArray\x12\x1a\n\x08\x64\x61tasets\x18\x01 \x03(\x0b\x32\x08.Dataset\"F\n\x0eProjectDataset\x12\x19\n\x07project\x18\x01 \x01(\x0b\x32\x08.Project\x12\x19\n\x07\x64\x61taset\x18\x02 \x01(\x0b\x32\x08.Dataset\"\"\n\x0cProjectStats\x12\x12\n\ncnt_images\x18\x01 \x01(\r\"\x18\n\x08LogLines\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\t\"\x14\n\x04Task\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t2\xc4\x0c\n\nGeneralAPI\x12 \n\rCreateProject\x12\x08.Project\x1a\x03.Id\"\x00\x12\'\n\rCreateDataset\x12\x0f.ProjectDataset\x1a\x03.Id\"\x00\x12(\n\x10GetProjectByName\x12\x08.Project\x1a\x08.Project\"\x00\x12/\n\x10GetDatasetByName\x12\x0f.ProjectDataset\x1a\x08.Dataset\"\x00\x12*\n\x0eGetModelByName\x12\n.ModelName\x1a\n.ModelInfo\"\x00\x12!\n\x0eGetProjectMeta\x12\x03.Id\x1a\x08.Project\"\x00\x12*\n\x12GetProjectDatasets\x12\x03.Id\x1a\r.DatasetArray\"\x00\x12&\n\x10GetDatasetImages\x12\x03.Id\x1a\x0b.ImageArray\"\x00\x12+\n\rGetImagesInfo\x12\x0b.ImageArray\x1a\x0b.ImagesInfo\"\x00\x12\x30\n\x0e\x44ownloadImages\x12\r.ImagesHashes\x1a\x0b.ChunkImage\"\x00\x30\x01\x12\x33\n\x13\x44ownloadAnnotations\x12\x0b.ImageArray\x1a\x0b.ChunkImage\"\x00\x30\x01\x12\x31\n\x0f\x46indImagesExist\x12\r.ImagesHashes\x1a\r.ImagesHashes\"\x00\x12\x39\n\x1a\x41\x64\x64\x45xistingImagesToDataset\x12\x0c.ImagesToAdd\x1a\x0b.ImageArray\"\x00\x12\x31\n\x11UploadAnnotations\x12\x0b.ChunkImage\x1a\x0b.ImageArray\"\x00(\x01\x12#\n\rUploadArchive\x12\x06.Chunk\x1a\x06.Empty\"\x00(\x01\x12\'\n\x0fGetProjectStats\x12\x03.Id\x1a\r.ProjectStats\"\x00\x12#\n\x12SetProjectFinished\x12\x03.Id\x1a\x06.Empty\"\x00\x12\x1a\n\x03Log\x12\t.LogLines\x1a\x06.Empty\"\x00\x12\'\n\x12GetImportStructure\x12\x03.Id\x1a\n.ListFiles\"\x00\x12\x30\n\x0eGetImportFiles\x12\x0e.ImportRequest\x1a\n.ChunkFile\"\x00\x30\x01\x12\x1f\n\nGetNewTask\x12\x06.Empty\x1a\x05.Task\"\x00\x30\x01\x12\x1e\n\x0bGetStopTask\x12\x06.Empty\x1a\x03.Id\"\x00\x30\x01\x12+\n\x0e\x41gentConnected\x12\n.AgentInfo\x1a\x0b.ServerInfo\"\x00\x12\x1d\n\tAgentPing\x12\x06.Empty\x1a\x06.Empty\"\x00\x12&\n\x0bUploadModel\x12\x0b.ChunkModel\x1a\x06.Empty\"\x00(\x01\x12.\n\rDownloadModel\x12\x11.ModelDescription\x1a\x06.Chunk\"\x00\x30\x01\x12\x31\n\x12GenerateNewModelId\x12\x06.Empty\x1a\x11.ModelDescription\"\x00\x12%\n\x10GetTelemetryTask\x12\x06.Empty\x1a\x05.Task\"\x00\x30\x01\x12\'\n\x0fUpdateTelemetry\x12\n.AgentInfo\x1a\x06.Empty\"\x00\x12\'\n\tAddImages\x12\x0b.ImagesInfo\x1a\x0b.ImageArray\"\x00\x12\'\n\x0cUploadImages\x12\x0b.ChunkImage\x1a\x06.Empty\"\x00(\x01\x12/\n\x10GetUsedImageList\x12\x06.Empty\x1a\x0f.NodeObjectHash\"\x00\x30\x01\x12/\n\x10GetUsedModelList\x12\x06.Empty\x1a\x0f.NodeObjectHash\"\x00\x30\x01\x12\x33\n\x16GetGeneralEventsStream\x12\x06.Empty\x1a\r.GeneralEvent\"\x00\x30\x01\x12)\n\x13GetGeneralEventData\x12\x06.Empty\x1a\x06.Chunk\"\x00\x30\x01\x12*\n\x14SendGeneralEventData\x12\x06.Chunk\x1a\x06.Empty\"\x00(\x01\x12&\n\x10\x41\x64\x64MetaToProject\x12\x08.Project\x1a\x06.Empty\"\x00\x62\x06proto3')
)




_MODELNAME = _descriptor.Descriptor(
  name='ModelName',
  full_name='ModelName',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ModelName.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=45,
)


_MODELARCHITECTURE = _descriptor.Descriptor(
  name='ModelArchitecture',
  full_name='ModelArchitecture',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ModelArchitecture.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='train_docker', full_name='ModelArchitecture.train_docker', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='inf_docker', full_name='ModelArchitecture.inf_docker', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='deploy_docker', full_name='ModelArchitecture.deploy_docker', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='deploysm_docker', full_name='ModelArchitecture.deploysm_docker', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=47,
  serialized_end=170,
)


_MODELINFO = _descriptor.Descriptor(
  name='ModelInfo',
  full_name='ModelInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='desc', full_name='ModelInfo.desc', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='arch', full_name='ModelInfo.arch', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=172,
  serialized_end=250,
)


_MODELDESCRIPTION = _descriptor.Descriptor(
  name='ModelDescription',
  full_name='ModelDescription',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ModelDescription.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hash', full_name='ModelDescription.hash', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=252,
  serialized_end=296,
)


_AGENTINFO = _descriptor.Descriptor(
  name='AgentInfo',
  full_name='AgentInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='AgentInfo.info', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=298,
  serialized_end=323,
)


_SERVERINFO = _descriptor.Descriptor(
  name='ServerInfo',
  full_name='ServerInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='ServerInfo.info', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=325,
  serialized_end=351,
)


_IMAGESINFOREQUEST = _descriptor.Descriptor(
  name='ImagesInfoRequest',
  full_name='ImagesInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='ImagesInfoRequest.project_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataset_id', full_name='ImagesInfoRequest.dataset_id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image_ids', full_name='ImagesInfoRequest.image_ids', index=2,
      number=3, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=353,
  serialized_end=431,
)


_IMAGESINFO = _descriptor.Descriptor(
  name='ImagesInfo',
  full_name='ImagesInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='infos', full_name='ImagesInfo.infos', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=433,
  serialized_end=468,
)


_FILE = _descriptor.Descriptor(
  name='File',
  full_name='File',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='File.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='meta', full_name='File.meta', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=470,
  serialized_end=504,
)


_LISTFILES = _descriptor.Descriptor(
  name='ListFiles',
  full_name='ListFiles',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='files', full_name='ListFiles.files', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=506,
  serialized_end=539,
)


_IMPORTREQUEST = _descriptor.Descriptor(
  name='ImportRequest',
  full_name='ImportRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='ImportRequest.task_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='files', full_name='ImportRequest.files', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=541,
  serialized_end=595,
)


_CHUNKFILE = _descriptor.Descriptor(
  name='ChunkFile',
  full_name='ChunkFile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chunk', full_name='ChunkFile.chunk', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='file', full_name='ChunkFile.file', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=597,
  serialized_end=652,
)


_CHUNKMODEL = _descriptor.Descriptor(
  name='ChunkModel',
  full_name='ChunkModel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chunk', full_name='ChunkModel.chunk', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='model', full_name='ChunkModel.model', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=654,
  serialized_end=723,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=725,
  serialized_end=732,
)


_RESULT = _descriptor.Descriptor(
  name='Result',
  full_name='Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='Result.code', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='Result.error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=734,
  serialized_end=771,
)


_ID = _descriptor.Descriptor(
  name='Id',
  full_name='Id',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Id.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=773,
  serialized_end=789,
)


_IMAGE = _descriptor.Descriptor(
  name='Image',
  full_name='Image',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Image.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hash', full_name='Image.hash', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='title', full_name='Image.title', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ext', full_name='Image.ext', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataset_id', full_name='Image.dataset_id', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='project_id', full_name='Image.project_id', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='meta', full_name='Image.meta', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=791,
  serialized_end=906,
)


_IMAGEARRAY = _descriptor.Descriptor(
  name='ImageArray',
  full_name='ImageArray',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='images', full_name='ImageArray.images', index=0,
      number=1, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=908,
  serialized_end=936,
)


_IMAGESTOADD = _descriptor.Descriptor(
  name='ImagesToAdd',
  full_name='ImagesToAdd',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='images', full_name='ImagesToAdd.images', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataset_id', full_name='ImagesToAdd.dataset_id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='project_id', full_name='ImagesToAdd.project_id', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=938,
  serialized_end=1015,
)


_IMAGESHASHES = _descriptor.Descriptor(
  name='ImagesHashes',
  full_name='ImagesHashes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='images_hashes', full_name='ImagesHashes.images_hashes', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='src_node_token', full_name='ImagesHashes.src_node_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1017,
  serialized_end=1078,
)


_CHUNK = _descriptor.Descriptor(
  name='Chunk',
  full_name='Chunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='buffer', full_name='Chunk.buffer', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='total_size', full_name='Chunk.total_size', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='Chunk.error', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1080,
  serialized_end=1138,
)


_CHUNKIMAGE = _descriptor.Descriptor(
  name='ChunkImage',
  full_name='ChunkImage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chunk', full_name='ChunkImage.chunk', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image', full_name='ChunkImage.image', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1140,
  serialized_end=1198,
)


_NODEOBJECTHASH = _descriptor.Descriptor(
  name='NodeObjectHash',
  full_name='NodeObjectHash',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hash', full_name='NodeObjectHash.hash', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ext', full_name='NodeObjectHash.ext', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1200,
  serialized_end=1243,
)


_GENERALEVENT = _descriptor.Descriptor(
  name='GeneralEvent',
  full_name='GeneralEvent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request_id', full_name='GeneralEvent.request_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='GeneralEvent.data', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1245,
  serialized_end=1293,
)


_PROJECT = _descriptor.Descriptor(
  name='Project',
  full_name='Project',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Project.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='title', full_name='Project.title', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='meta', full_name='Project.meta', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1295,
  serialized_end=1345,
)


_DATASET = _descriptor.Descriptor(
  name='Dataset',
  full_name='Dataset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Dataset.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='title', full_name='Dataset.title', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1347,
  serialized_end=1383,
)


_PROJECTARRAY = _descriptor.Descriptor(
  name='ProjectArray',
  full_name='ProjectArray',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='projects', full_name='ProjectArray.projects', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1385,
  serialized_end=1427,
)


_DATASETARRAY = _descriptor.Descriptor(
  name='DatasetArray',
  full_name='DatasetArray',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='datasets', full_name='DatasetArray.datasets', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1429,
  serialized_end=1471,
)


_PROJECTDATASET = _descriptor.Descriptor(
  name='ProjectDataset',
  full_name='ProjectDataset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='ProjectDataset.project', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataset', full_name='ProjectDataset.dataset', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1473,
  serialized_end=1543,
)


_PROJECTSTATS = _descriptor.Descriptor(
  name='ProjectStats',
  full_name='ProjectStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cnt_images', full_name='ProjectStats.cnt_images', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1545,
  serialized_end=1579,
)


_LOGLINES = _descriptor.Descriptor(
  name='LogLines',
  full_name='LogLines',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='LogLines.data', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1581,
  serialized_end=1605,
)


_TASK = _descriptor.Descriptor(
  name='Task',
  full_name='Task',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='Task.data', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1607,
  serialized_end=1627,
)

_MODELINFO.fields_by_name['desc'].message_type = _MODELDESCRIPTION
_MODELINFO.fields_by_name['arch'].message_type = _MODELARCHITECTURE
_IMAGESINFO.fields_by_name['infos'].message_type = _IMAGE
_LISTFILES.fields_by_name['files'].message_type = _FILE
_IMPORTREQUEST.fields_by_name['files'].message_type = _FILE
_CHUNKFILE.fields_by_name['chunk'].message_type = _CHUNK
_CHUNKFILE.fields_by_name['file'].message_type = _FILE
_CHUNKMODEL.fields_by_name['chunk'].message_type = _CHUNK
_CHUNKMODEL.fields_by_name['model'].message_type = _MODELDESCRIPTION
_IMAGESTOADD.fields_by_name['images'].message_type = _IMAGE
_CHUNKIMAGE.fields_by_name['chunk'].message_type = _CHUNK
_CHUNKIMAGE.fields_by_name['image'].message_type = _IMAGE
_PROJECTARRAY.fields_by_name['projects'].message_type = _PROJECT
_DATASETARRAY.fields_by_name['datasets'].message_type = _DATASET
_PROJECTDATASET.fields_by_name['project'].message_type = _PROJECT
_PROJECTDATASET.fields_by_name['dataset'].message_type = _DATASET
DESCRIPTOR.message_types_by_name['ModelName'] = _MODELNAME
DESCRIPTOR.message_types_by_name['ModelArchitecture'] = _MODELARCHITECTURE
DESCRIPTOR.message_types_by_name['ModelInfo'] = _MODELINFO
DESCRIPTOR.message_types_by_name['ModelDescription'] = _MODELDESCRIPTION
DESCRIPTOR.message_types_by_name['AgentInfo'] = _AGENTINFO
DESCRIPTOR.message_types_by_name['ServerInfo'] = _SERVERINFO
DESCRIPTOR.message_types_by_name['ImagesInfoRequest'] = _IMAGESINFOREQUEST
DESCRIPTOR.message_types_by_name['ImagesInfo'] = _IMAGESINFO
DESCRIPTOR.message_types_by_name['File'] = _FILE
DESCRIPTOR.message_types_by_name['ListFiles'] = _LISTFILES
DESCRIPTOR.message_types_by_name['ImportRequest'] = _IMPORTREQUEST
DESCRIPTOR.message_types_by_name['ChunkFile'] = _CHUNKFILE
DESCRIPTOR.message_types_by_name['ChunkModel'] = _CHUNKMODEL
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['Result'] = _RESULT
DESCRIPTOR.message_types_by_name['Id'] = _ID
DESCRIPTOR.message_types_by_name['Image'] = _IMAGE
DESCRIPTOR.message_types_by_name['ImageArray'] = _IMAGEARRAY
DESCRIPTOR.message_types_by_name['ImagesToAdd'] = _IMAGESTOADD
DESCRIPTOR.message_types_by_name['ImagesHashes'] = _IMAGESHASHES
DESCRIPTOR.message_types_by_name['Chunk'] = _CHUNK
DESCRIPTOR.message_types_by_name['ChunkImage'] = _CHUNKIMAGE
DESCRIPTOR.message_types_by_name['NodeObjectHash'] = _NODEOBJECTHASH
DESCRIPTOR.message_types_by_name['GeneralEvent'] = _GENERALEVENT
DESCRIPTOR.message_types_by_name['Project'] = _PROJECT
DESCRIPTOR.message_types_by_name['Dataset'] = _DATASET
DESCRIPTOR.message_types_by_name['ProjectArray'] = _PROJECTARRAY
DESCRIPTOR.message_types_by_name['DatasetArray'] = _DATASETARRAY
DESCRIPTOR.message_types_by_name['ProjectDataset'] = _PROJECTDATASET
DESCRIPTOR.message_types_by_name['ProjectStats'] = _PROJECTSTATS
DESCRIPTOR.message_types_by_name['LogLines'] = _LOGLINES
DESCRIPTOR.message_types_by_name['Task'] = _TASK
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ModelName = _reflection.GeneratedProtocolMessageType('ModelName', (_message.Message,), dict(
  DESCRIPTOR = _MODELNAME,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ModelName)
  ))
_sym_db.RegisterMessage(ModelName)

ModelArchitecture = _reflection.GeneratedProtocolMessageType('ModelArchitecture', (_message.Message,), dict(
  DESCRIPTOR = _MODELARCHITECTURE,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ModelArchitecture)
  ))
_sym_db.RegisterMessage(ModelArchitecture)

ModelInfo = _reflection.GeneratedProtocolMessageType('ModelInfo', (_message.Message,), dict(
  DESCRIPTOR = _MODELINFO,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ModelInfo)
  ))
_sym_db.RegisterMessage(ModelInfo)

ModelDescription = _reflection.GeneratedProtocolMessageType('ModelDescription', (_message.Message,), dict(
  DESCRIPTOR = _MODELDESCRIPTION,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ModelDescription)
  ))
_sym_db.RegisterMessage(ModelDescription)

AgentInfo = _reflection.GeneratedProtocolMessageType('AgentInfo', (_message.Message,), dict(
  DESCRIPTOR = _AGENTINFO,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:AgentInfo)
  ))
_sym_db.RegisterMessage(AgentInfo)

ServerInfo = _reflection.GeneratedProtocolMessageType('ServerInfo', (_message.Message,), dict(
  DESCRIPTOR = _SERVERINFO,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ServerInfo)
  ))
_sym_db.RegisterMessage(ServerInfo)

ImagesInfoRequest = _reflection.GeneratedProtocolMessageType('ImagesInfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _IMAGESINFOREQUEST,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ImagesInfoRequest)
  ))
_sym_db.RegisterMessage(ImagesInfoRequest)

ImagesInfo = _reflection.GeneratedProtocolMessageType('ImagesInfo', (_message.Message,), dict(
  DESCRIPTOR = _IMAGESINFO,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ImagesInfo)
  ))
_sym_db.RegisterMessage(ImagesInfo)

File = _reflection.GeneratedProtocolMessageType('File', (_message.Message,), dict(
  DESCRIPTOR = _FILE,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:File)
  ))
_sym_db.RegisterMessage(File)

ListFiles = _reflection.GeneratedProtocolMessageType('ListFiles', (_message.Message,), dict(
  DESCRIPTOR = _LISTFILES,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ListFiles)
  ))
_sym_db.RegisterMessage(ListFiles)

ImportRequest = _reflection.GeneratedProtocolMessageType('ImportRequest', (_message.Message,), dict(
  DESCRIPTOR = _IMPORTREQUEST,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ImportRequest)
  ))
_sym_db.RegisterMessage(ImportRequest)

ChunkFile = _reflection.GeneratedProtocolMessageType('ChunkFile', (_message.Message,), dict(
  DESCRIPTOR = _CHUNKFILE,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ChunkFile)
  ))
_sym_db.RegisterMessage(ChunkFile)

ChunkModel = _reflection.GeneratedProtocolMessageType('ChunkModel', (_message.Message,), dict(
  DESCRIPTOR = _CHUNKMODEL,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ChunkModel)
  ))
_sym_db.RegisterMessage(ChunkModel)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:Empty)
  ))
_sym_db.RegisterMessage(Empty)

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), dict(
  DESCRIPTOR = _RESULT,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:Result)
  ))
_sym_db.RegisterMessage(Result)

Id = _reflection.GeneratedProtocolMessageType('Id', (_message.Message,), dict(
  DESCRIPTOR = _ID,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:Id)
  ))
_sym_db.RegisterMessage(Id)

Image = _reflection.GeneratedProtocolMessageType('Image', (_message.Message,), dict(
  DESCRIPTOR = _IMAGE,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:Image)
  ))
_sym_db.RegisterMessage(Image)

ImageArray = _reflection.GeneratedProtocolMessageType('ImageArray', (_message.Message,), dict(
  DESCRIPTOR = _IMAGEARRAY,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ImageArray)
  ))
_sym_db.RegisterMessage(ImageArray)

ImagesToAdd = _reflection.GeneratedProtocolMessageType('ImagesToAdd', (_message.Message,), dict(
  DESCRIPTOR = _IMAGESTOADD,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ImagesToAdd)
  ))
_sym_db.RegisterMessage(ImagesToAdd)

ImagesHashes = _reflection.GeneratedProtocolMessageType('ImagesHashes', (_message.Message,), dict(
  DESCRIPTOR = _IMAGESHASHES,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ImagesHashes)
  ))
_sym_db.RegisterMessage(ImagesHashes)

Chunk = _reflection.GeneratedProtocolMessageType('Chunk', (_message.Message,), dict(
  DESCRIPTOR = _CHUNK,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:Chunk)
  ))
_sym_db.RegisterMessage(Chunk)

ChunkImage = _reflection.GeneratedProtocolMessageType('ChunkImage', (_message.Message,), dict(
  DESCRIPTOR = _CHUNKIMAGE,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ChunkImage)
  ))
_sym_db.RegisterMessage(ChunkImage)

NodeObjectHash = _reflection.GeneratedProtocolMessageType('NodeObjectHash', (_message.Message,), dict(
  DESCRIPTOR = _NODEOBJECTHASH,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:NodeObjectHash)
  ))
_sym_db.RegisterMessage(NodeObjectHash)

GeneralEvent = _reflection.GeneratedProtocolMessageType('GeneralEvent', (_message.Message,), dict(
  DESCRIPTOR = _GENERALEVENT,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:GeneralEvent)
  ))
_sym_db.RegisterMessage(GeneralEvent)

Project = _reflection.GeneratedProtocolMessageType('Project', (_message.Message,), dict(
  DESCRIPTOR = _PROJECT,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:Project)
  ))
_sym_db.RegisterMessage(Project)

Dataset = _reflection.GeneratedProtocolMessageType('Dataset', (_message.Message,), dict(
  DESCRIPTOR = _DATASET,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:Dataset)
  ))
_sym_db.RegisterMessage(Dataset)

ProjectArray = _reflection.GeneratedProtocolMessageType('ProjectArray', (_message.Message,), dict(
  DESCRIPTOR = _PROJECTARRAY,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ProjectArray)
  ))
_sym_db.RegisterMessage(ProjectArray)

DatasetArray = _reflection.GeneratedProtocolMessageType('DatasetArray', (_message.Message,), dict(
  DESCRIPTOR = _DATASETARRAY,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:DatasetArray)
  ))
_sym_db.RegisterMessage(DatasetArray)

ProjectDataset = _reflection.GeneratedProtocolMessageType('ProjectDataset', (_message.Message,), dict(
  DESCRIPTOR = _PROJECTDATASET,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ProjectDataset)
  ))
_sym_db.RegisterMessage(ProjectDataset)

ProjectStats = _reflection.GeneratedProtocolMessageType('ProjectStats', (_message.Message,), dict(
  DESCRIPTOR = _PROJECTSTATS,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:ProjectStats)
  ))
_sym_db.RegisterMessage(ProjectStats)

LogLines = _reflection.GeneratedProtocolMessageType('LogLines', (_message.Message,), dict(
  DESCRIPTOR = _LOGLINES,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:LogLines)
  ))
_sym_db.RegisterMessage(LogLines)

Task = _reflection.GeneratedProtocolMessageType('Task', (_message.Message,), dict(
  DESCRIPTOR = _TASK,
  __module__ = 'worker_api_pb2'
  # @@protoc_insertion_point(class_scope:Task)
  ))
_sym_db.RegisterMessage(Task)



_GENERALAPI = _descriptor.ServiceDescriptor(
  name='GeneralAPI',
  full_name='GeneralAPI',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=1630,
  serialized_end=3234,
  methods=[
  _descriptor.MethodDescriptor(
    name='CreateProject',
    full_name='GeneralAPI.CreateProject',
    index=0,
    containing_service=None,
    input_type=_PROJECT,
    output_type=_ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateDataset',
    full_name='GeneralAPI.CreateDataset',
    index=1,
    containing_service=None,
    input_type=_PROJECTDATASET,
    output_type=_ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProjectByName',
    full_name='GeneralAPI.GetProjectByName',
    index=2,
    containing_service=None,
    input_type=_PROJECT,
    output_type=_PROJECT,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetDatasetByName',
    full_name='GeneralAPI.GetDatasetByName',
    index=3,
    containing_service=None,
    input_type=_PROJECTDATASET,
    output_type=_DATASET,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetModelByName',
    full_name='GeneralAPI.GetModelByName',
    index=4,
    containing_service=None,
    input_type=_MODELNAME,
    output_type=_MODELINFO,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProjectMeta',
    full_name='GeneralAPI.GetProjectMeta',
    index=5,
    containing_service=None,
    input_type=_ID,
    output_type=_PROJECT,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProjectDatasets',
    full_name='GeneralAPI.GetProjectDatasets',
    index=6,
    containing_service=None,
    input_type=_ID,
    output_type=_DATASETARRAY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetDatasetImages',
    full_name='GeneralAPI.GetDatasetImages',
    index=7,
    containing_service=None,
    input_type=_ID,
    output_type=_IMAGEARRAY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetImagesInfo',
    full_name='GeneralAPI.GetImagesInfo',
    index=8,
    containing_service=None,
    input_type=_IMAGEARRAY,
    output_type=_IMAGESINFO,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DownloadImages',
    full_name='GeneralAPI.DownloadImages',
    index=9,
    containing_service=None,
    input_type=_IMAGESHASHES,
    output_type=_CHUNKIMAGE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DownloadAnnotations',
    full_name='GeneralAPI.DownloadAnnotations',
    index=10,
    containing_service=None,
    input_type=_IMAGEARRAY,
    output_type=_CHUNKIMAGE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='FindImagesExist',
    full_name='GeneralAPI.FindImagesExist',
    index=11,
    containing_service=None,
    input_type=_IMAGESHASHES,
    output_type=_IMAGESHASHES,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddExistingImagesToDataset',
    full_name='GeneralAPI.AddExistingImagesToDataset',
    index=12,
    containing_service=None,
    input_type=_IMAGESTOADD,
    output_type=_IMAGEARRAY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UploadAnnotations',
    full_name='GeneralAPI.UploadAnnotations',
    index=13,
    containing_service=None,
    input_type=_CHUNKIMAGE,
    output_type=_IMAGEARRAY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UploadArchive',
    full_name='GeneralAPI.UploadArchive',
    index=14,
    containing_service=None,
    input_type=_CHUNK,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetProjectStats',
    full_name='GeneralAPI.GetProjectStats',
    index=15,
    containing_service=None,
    input_type=_ID,
    output_type=_PROJECTSTATS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetProjectFinished',
    full_name='GeneralAPI.SetProjectFinished',
    index=16,
    containing_service=None,
    input_type=_ID,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Log',
    full_name='GeneralAPI.Log',
    index=17,
    containing_service=None,
    input_type=_LOGLINES,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetImportStructure',
    full_name='GeneralAPI.GetImportStructure',
    index=18,
    containing_service=None,
    input_type=_ID,
    output_type=_LISTFILES,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetImportFiles',
    full_name='GeneralAPI.GetImportFiles',
    index=19,
    containing_service=None,
    input_type=_IMPORTREQUEST,
    output_type=_CHUNKFILE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetNewTask',
    full_name='GeneralAPI.GetNewTask',
    index=20,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_TASK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetStopTask',
    full_name='GeneralAPI.GetStopTask',
    index=21,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_ID,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AgentConnected',
    full_name='GeneralAPI.AgentConnected',
    index=22,
    containing_service=None,
    input_type=_AGENTINFO,
    output_type=_SERVERINFO,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AgentPing',
    full_name='GeneralAPI.AgentPing',
    index=23,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UploadModel',
    full_name='GeneralAPI.UploadModel',
    index=24,
    containing_service=None,
    input_type=_CHUNKMODEL,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='DownloadModel',
    full_name='GeneralAPI.DownloadModel',
    index=25,
    containing_service=None,
    input_type=_MODELDESCRIPTION,
    output_type=_CHUNK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GenerateNewModelId',
    full_name='GeneralAPI.GenerateNewModelId',
    index=26,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_MODELDESCRIPTION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetTelemetryTask',
    full_name='GeneralAPI.GetTelemetryTask',
    index=27,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_TASK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateTelemetry',
    full_name='GeneralAPI.UpdateTelemetry',
    index=28,
    containing_service=None,
    input_type=_AGENTINFO,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddImages',
    full_name='GeneralAPI.AddImages',
    index=29,
    containing_service=None,
    input_type=_IMAGESINFO,
    output_type=_IMAGEARRAY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UploadImages',
    full_name='GeneralAPI.UploadImages',
    index=30,
    containing_service=None,
    input_type=_CHUNKIMAGE,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetUsedImageList',
    full_name='GeneralAPI.GetUsedImageList',
    index=31,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_NODEOBJECTHASH,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetUsedModelList',
    full_name='GeneralAPI.GetUsedModelList',
    index=32,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_NODEOBJECTHASH,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetGeneralEventsStream',
    full_name='GeneralAPI.GetGeneralEventsStream',
    index=33,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_GENERALEVENT,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetGeneralEventData',
    full_name='GeneralAPI.GetGeneralEventData',
    index=34,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_CHUNK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendGeneralEventData',
    full_name='GeneralAPI.SendGeneralEventData',
    index=35,
    containing_service=None,
    input_type=_CHUNK,
    output_type=_EMPTY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddMetaToProject',
    full_name='GeneralAPI.AddMetaToProject',
    index=36,
    containing_service=None,
    input_type=_PROJECT,
    output_type=_EMPTY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_GENERALAPI)

DESCRIPTOR.services_by_name['GeneralAPI'] = _GENERALAPI

# @@protoc_insertion_point(module_scope)
